/**
 * Sk√¶ri, bla√∞, steinn.
 * Spila√∞ gegnum console.
 */

/** H√°marks fj√∂ldi best-of leikja, √¶tti a√∞ vera j√°kv√¶√∞ heiltala st√¶rri en 0 */
const MAX_BEST_OF = 10;

/** Global breyta sem heldur utan um heildar sigra */
let wins = 0;

/** Global breyta sem heldur utan um heildar t√∂p */
let losses = 0;

let playerRoundWins = 0;
let compRoundWins = 0;


function isValidBestOf(bestOf) {
  let returnValue = false;
  if(bestOf % 2 !== 0){
    if(bestOf < MAX_BEST_OF && bestOf > 0){
      returnValue = true;
    }
    else{
      console.error("Talan ver√∞ur a√∞ vera minni en 10 og meiri en 0!");
    }
  }
  else{
    console.error("Talan ver√∞ur a√∞ vera oddatala!");
  }

  return returnValue;
}


function checkGame(player, computer, compAutomaticWin, totalGames) {
  let playerAtk;
  let compAtk;
  let oldPlayerScore = playerRoundWins;
  let oldCompScore = compRoundWins;
  let whoWon;
  if(compAutomaticWin){
    compRoundWins++;
    alert("√û√∫ valdir ekki 1,2 n√© 3, √æannig t√∂lvan vann üòî");
  }
  else{
    if(player == 1){ // ef player veldi sk√¶ri
      playerAtk = "sk√¶ri";
      if(computer == 2){ // bla√∞
        compAtk = "bla√∞";
        playerRoundWins++;
      }
      else if(computer == 3){ // steinn
        compAtk = "steinn";
        compRoundWins++;
      }
      else{
        compAtk = "sk√¶ri";
      }
    }
    else if(player == 2){ // bla√∞
      playerAtk = "bla√∞";
      if(computer == 1){ // sk√¶ri
        compAtk = "sk√¶ri";
        compRoundWins++;
      }
      else if(computer == 3){ // steinn
        compAtk = "stein";
        playerRoundWins++;
      }
      else{
        compAtk = "bla√∞";
      }
    }
    else if(player == 3){ // steinn
      playerAtk = "stein";
      if(computer == 1){ // sk√¶ri
        compAtk = "sk√¶ri";
        playerRoundWins++;
      }
      else if(computer == 2){ // bla√∞
        compAtk = "bla√∞";
        compRoundWins++;
      }
      else{
        compAtk = "stein";
      }

    }
    if(playerRoundWins > oldPlayerScore){
      whoWon = ", √û√∫ vannst! üëå";
    }
    else if(compRoundWins > oldCompScore){
      whoWon = ", T√∂lvan vann üòí";
    }
    else{
      whoWon = ", √æa√∞ er jafntefli, √æannig enginn f√©kk stig üòê";
    }

    alert("√û√∫ valdir " + playerAtk + " og t√∂lvan valdi " + compAtk + whoWon);
  }
  isGameOver(totalGames);
}


function round(totalGames) {

  let playerChose = prompt("Veldu Sk√¶ri(1), Bla√∞(2), e√∞a Stein(3)!");

  if(playerChose !== null){ // ef player √Ωtti ekki √° cancel
    if(playerChose != 1 && playerChose != 2 && playerChose != 3){ // ef player velur √≥l√∂glegt gildi
      console.log("ekki 123");
      checkGame(1,1,true,totalGames);
    }
    else{
      let compChose = Math.floor(Math.random() * 2 + 1);
      console.log("calls checkgame");
      checkGame(playerChose, compChose, false, totalGames);

    }
  }
  else{ // ef player √Ωtti √° cancel
    compRoundWins = 0;
    playerRoundWins = 0;
  }
}


function isGameOver(totalGames){
  console.log("compWon: " + compRoundWins + "  playerWon: " + playerRoundWins + "  totalGames:  " + totalGames);

  if(compRoundWins === totalGames){ // ef comp er b√∫inn a√∞ vinna
    alert("T√∂lvan vann leikinn. Gengur betur n√¶st! üò£");
    losses++;
    compRoundWins = 0;
    playerRoundWins = 0;
  }
  else if(playerRoundWins === totalGames){ // ef player er b√∫inn a√∞ vinna
    alert("√û√∫ vannst leikinn. Til Hamingju! üéâüéâüéâ");
    wins++;
    compRoundWins = 0;
    playerRoundWins = 0;
  }
  else{
    round(totalGames);
  }

}


function play() {

  let gamesAmount = prompt("'Best af' hverju viltu spila? (√æa√∞ ver√∞ur a√∞ vera oddatala, minni en 10!)");

  let isValid = isValidBestOf(gamesAmount);
  if(isValid){
    isGameOver(Math.ceil(gamesAmount/2));
  }
}


function games() {
  winDivLoss = wins/(wins+losses);
  lossDivWin = losses/(wins+losses);
  if(Number.isNaN(winDivLoss)){
    winDivLoss = 0;
  }
  else if(!Number.isFinite(winDivLoss)){
    winDivLoss = 1;
  }
  if(Number.isNaN(lossDivWin)){
    lossDivWin = 0;
  }
  else if(!Number.isFinite(lossDivWin)){
    lossDivWin = 1;
  }
  console.log("√û√∫ hefur spila√∞ " + (wins + losses) + " leiki.");
  console.log("√æ√∫ hefur unni√∞ " + wins + ", e√∞a " + (winDivLoss*100).toFixed(2) + "% af heild.");
  console.log("√æ√∫ hefur tapa√∞ " + losses + ", e√∞a " + (lossDivWin*100).toFixed(2) + "% af heild.");
}
